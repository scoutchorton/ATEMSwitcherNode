/* -LICENSE-START-
** Copyright (c) 2015 Blackmagic Design
**
** Permission is hereby granted, free of charge, to any person or organization
** obtaining a copy of the software and accompanying documentation covered by
** this license (the "Software") to use, reproduce, display, distribute,
** execute, and transmit the Software, and to prepare derivative works of the
** Software, and to permit third-parties to whom the Software is furnished to
** do so, all subject to the following:
** 
** The copyright notices in the Software and this entire statement, including
** the above license grant, this restriction and the following disclaimer,
** must be included in all copies of the Software, in whole or in part, and
** all derivative works of the Software, unless such copies or derivative
** works are solely in the form of machine-executable object code generated by
** a source language processor.
** 
** THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
** IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
** FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
** SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
** FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
** ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
** DEALINGS IN THE SOFTWARE.
** -LICENSE-END-
*/

#ifndef BMD_BMDSWITCHERAPI_V6_5_1_H
#define BMD_BMDSWITCHERAPI_V6_5_1_H

#include "BMDSwitcherAPI.h"

// Interface ID Declarations

BMD_CONST REFIID IID_IBMDSwitcherInputCallback_v6_5_1            = /* 8E583D89-0BAF-4447-AB8C-6A12CD8724CB */ {0x8E,0x58,0x3D,0x89,0x0B,0xAF,0x44,0x47,0xAB,0x8C,0x6A,0x12,0xCD,0x87,0x24,0xCB};
BMD_CONST REFIID IID_IBMDSwitcherInput_v6_5_1                    = /* 66F3D466-8C8C-4DB4-B313-8DD2EC665DBB */ {0x66,0xF3,0xD4,0x66,0x8C,0x8C,0x4D,0xB4,0xB3,0x13,0x8D,0xD2,0xEC,0x66,0x5D,0xBB};
BMD_CONST REFIID IID_IBMDSwitcherInputIterator_v6_5_1            = /* 92AB7A73-C6F6-47FC-92A7-C8EEADC9EAAC */ {0x92,0xAB,0x7A,0x73,0xC6,0xF6,0x47,0xFC,0x92,0xA7,0xC8,0xEE,0xAD,0xC9,0xEA,0xAC};

/* Enum BMDSwitcherInputPropertyId - IBMDSwitcherInput Property ID */

typedef uint32_t BMDSwitcherInputPropertyId_v6_5_1;
enum _BMDSwitcherInputPropertyId_v6_5_1 {
	bmdSwitcherInputPropertyIdPortType_v6_5_1                    = 'prtp',	// Int type (BMDSwitcherPortType), Get only
	bmdSwitcherInputPropertyIdInputAvailability_v6_5_1           = 'avlb',	// Int type (BMDSwitcherInputAvailability), Get only
	bmdSwitcherInputPropertyIdShortName_v6_5_1                   = 'shnm',	// String type, Get/Set
	bmdSwitcherInputPropertyIdLongName_v6_5_1                    = 'lgnm',	// String type, Get/Set
	bmdSwitcherInputPropertyIdIsProgramTallied_v6_5_1            = 'ipgt',	// Flag type, Get only
	bmdSwitcherInputPropertyIdIsPreviewTallied_v6_5_1            = 'iprt',	// Flag type, Get only
	bmdSwitcherInputPropertyIdAvailableExternalPortTypes_v6_5_1  = 'aept',	// Int type (BMDSwitcherExternalPortType), Get only
	bmdSwitcherInputPropertyIdCurrentExternalPortType_v6_5_1     = 'cept',	// Int type (BMDSwitcherExternalPortType), Get/Set
};

#if defined(__cplusplus)

// Forward Declarations

class IBMDSwitcherInputCallback_v6_5_1;
class IBMDSwitcherInput_v6_5_1;
class IBMDSwitcherInputIterator_v6_5_1;

/* Interface IBMDSwitcherInputCallback - Switcher Input Object Callback */

class IBMDSwitcherInputCallback_v6_5_1 : public IUnknown
{
public:
	virtual HRESULT PropertyChanged (/* in */ BMDSwitcherInputPropertyId_v6_5_1 propertyId) = 0;

protected:
	virtual ~IBMDSwitcherInputCallback_v6_5_1 () {} // call Release method to drop reference count
};

/* Interface IBMDSwitcherInput - Switcher Input Object */

class IBMDSwitcherInput_v6_5_1 : public IUnknown
{
public:
	virtual HRESULT AddCallback (/* in */ IBMDSwitcherInputCallback_v6_5_1* callback) = 0;
	virtual HRESULT RemoveCallback (/* in */ IBMDSwitcherInputCallback_v6_5_1* callback) = 0;
	virtual HRESULT SetFlag (/* in */ BMDSwitcherInputPropertyId_v6_5_1 propertyId, /* in */ bool value) = 0;
	virtual HRESULT GetFlag (/* in */ BMDSwitcherInputPropertyId_v6_5_1 propertyId, /* out */ bool* value) = 0;
	virtual HRESULT SetInt (/* in */ BMDSwitcherInputPropertyId_v6_5_1 propertyId, /* in */ int64_t value) = 0;
	virtual HRESULT GetInt (/* in */ BMDSwitcherInputPropertyId_v6_5_1 propertyId, /* out */ int64_t* value) = 0;
	virtual HRESULT SetFloat (/* in */ BMDSwitcherInputPropertyId_v6_5_1 propertyId, /* in */ double value) = 0;
	virtual HRESULT GetFloat (/* in */ BMDSwitcherInputPropertyId_v6_5_1 propertyId, /* out */ double* value) = 0;
	virtual HRESULT SetString (/* in */ BMDSwitcherInputPropertyId_v6_5_1 propertyId, /* in */ CFStringRef value) = 0;
	virtual HRESULT GetString (/* in */ BMDSwitcherInputPropertyId_v6_5_1 propertyId, /* out */ CFStringRef* value) = 0;
    virtual HRESULT GetInputId (/* out */ BMDSwitcherInputId* inputId) = 0;

protected:
	virtual ~IBMDSwitcherInput_v6_5_1 () {} // call Release method to drop reference count
};

/* Interface IBMDSwitcherInputIterator - Input Iterator */

class IBMDSwitcherInputIterator_v6_5_1 : public IUnknown
{
public:
	virtual HRESULT Next (/* out */ IBMDSwitcherInput_v6_5_1** input) = 0;
	virtual HRESULT GetById (/* in */ BMDSwitcherInputId inputId, /* out */ IBMDSwitcherInput_v6_5_1** input) = 0;

protected:
	virtual ~IBMDSwitcherInputIterator_v6_5_1 () {} // call Release method to drop reference count
};


#endif      // defined(__cplusplus)
#endif /* defined(BMD_BMDSWITCHERAPI_V6_5_1_H) */
