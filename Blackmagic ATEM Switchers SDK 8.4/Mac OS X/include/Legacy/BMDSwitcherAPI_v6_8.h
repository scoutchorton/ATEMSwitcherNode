/* -LICENSE-START-
** Copyright (c) 2016 Blackmagic Design
**
** Permission is hereby granted, free of charge, to any person or organization
** obtaining a copy of the software and accompanying documentation covered by
** this license (the "Software") to use, reproduce, display, distribute,
** execute, and transmit the Software, and to prepare derivative works of the
** Software, and to permit third-parties to whom the Software is furnished to
** do so, all subject to the following:
** 
** The copyright notices in the Software and this entire statement, including
** the above license grant, this restriction and the following disclaimer,
** must be included in all copies of the Software, in whole or in part, and
** all derivative works of the Software, unless such copies or derivative
** works are solely in the form of machine-executable object code generated by
** a source language processor.
** 
** THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
** IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
** FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
** SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
** FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
** ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
** DEALINGS IN THE SOFTWARE.
** -LICENSE-END-
*/

#ifndef BMD_BMDSWITCHERAPI_V6_8_H
#define BMD_BMDSWITCHERAPI_V6_8_H

#include "BMDSwitcherAPI.h"

// Interface ID Declarations

BMD_CONST REFIID IID_IBMDSwitcherMultiView_v6_8				= /* 231AA55F-EC1D-4FFF-ACE7-3806BA7894BB */ {0x23,0x1A,0xA5,0x5F,0xEC,0x1D,0x4F,0xFF,0xAC,0xE7,0x38,0x06,0xBA,0x78,0x94,0xBB};
BMD_CONST REFIID IID_IBMDSwitcherMultiViewIterator_v6_8		= /* 51FED981-C2AD-45A2-8618-61429CEED48D */ {0x51,0xFE,0xD9,0x81,0xC2,0xAD,0x45,0xA2,0x86,0x18,0x61,0x42,0x9C,0xEE,0xD4,0x8D};
BMD_CONST REFIID IID_IBMDSwitcherInput_v6_8					= /* 875D3396-6C8A-4FD8-93B7-D1CB655F2AF2 */ {0x87,0x5D,0x33,0x96,0x6C,0x8A,0x4F,0xD8,0x93,0xB7,0xD1,0xCB,0x65,0x5F,0x2A,0xF2};
BMD_CONST REFIID IID_IBMDSwitcherInputIterator_v6_8			= /* F841D36E-2762-4215-A598-FFE76D0FF05C */ {0xF8,0x41,0xD3,0x6E,0x27,0x62,0x42,0x15,0xA5,0x98,0xFF,0xE7,0x6D,0x0F,0xF0,0x5C};

#if defined(__cplusplus)

// Forward Declarations

class IBMDSwitcherMultiView_v6_8;
class IBMDSwitcherMultiViewIterator_v6_8;
class IBMDSwitcherInput_v6_8;
class IBMDSwitcherInputIterator_v6_8;

/* Interface IBMDSwitcherMultiView_v6_8 - MultiView Object */

class IBMDSwitcherMultiView_v6_8 : public IUnknown
{
public:
    virtual HRESULT GetLayout (/* out */ BMDSwitcherMultiViewLayout* layout) = 0;
    virtual HRESULT SetLayout (/* in */ BMDSwitcherMultiViewLayout layout) = 0;
    virtual HRESULT GetWindowInput (/* in */ uint32_t window, /* out */ BMDSwitcherInputId* input) = 0;
    virtual HRESULT SetWindowInput (/* in */ uint32_t window, /* in */ BMDSwitcherInputId input) = 0;
    virtual HRESULT GetWindowCount (/* out */ uint32_t* windowCount) = 0;
    virtual HRESULT GetInputAvailabilityMask (/* out */ BMDSwitcherInputAvailability* availabilityMask) = 0;
    virtual HRESULT CanRouteInputs (/* out */ bool* canRoute) = 0;
    virtual HRESULT AddCallback (/* in */ IBMDSwitcherMultiViewCallback* callback) = 0;
    virtual HRESULT RemoveCallback (/* in */ IBMDSwitcherMultiViewCallback* callback) = 0;
	
protected:
	virtual ~IBMDSwitcherMultiView_v6_8 () {} // call Release method to drop reference count
};

/* Interface IBMDSwitcherMultiViewIterator_v6_8 - MultiView Iterator */

class IBMDSwitcherMultiViewIterator_v6_8 : public IUnknown
{
public:
	virtual HRESULT Next (/* out */ IBMDSwitcherMultiView_v6_8** multiView) = 0;
	
protected:
	virtual ~IBMDSwitcherMultiViewIterator_v6_8 () {} // call Release method to drop reference count
};

/* Interface IBMDSwitcherInput_v6_8 - Switcher Input Object */

class IBMDSwitcherInput_v6_8 : public IUnknown
{
public:
    virtual HRESULT GetPortType (/* out */ BMDSwitcherPortType* type) = 0;
    virtual HRESULT GetInputAvailability (/* out */ BMDSwitcherInputAvailability* availability) = 0;
    virtual HRESULT SetShortName (/* in */ CFStringRef name) = 0;
    virtual HRESULT GetShortName (/* out */ CFStringRef* name) = 0;
    virtual HRESULT SetLongName (/* in */ CFStringRef name) = 0;
    virtual HRESULT GetLongName (/* out */ CFStringRef* name) = 0;
    virtual HRESULT ResetNames (void) = 0;
    virtual HRESULT IsProgramTallied (/* out */ bool* isTallied) = 0;
    virtual HRESULT IsPreviewTallied (/* out */ bool* isTallied) = 0;
    virtual HRESULT GetAvailableExternalPortTypes (/* out */ BMDSwitcherExternalPortType* types) = 0;
    virtual HRESULT SetCurrentExternalPortType (/* in */ BMDSwitcherExternalPortType value) = 0;
    virtual HRESULT GetCurrentExternalPortType (/* out */ BMDSwitcherExternalPortType* value) = 0;
    virtual HRESULT GetInputId (/* out */ BMDSwitcherInputId* inputId) = 0;
    virtual HRESULT AddCallback (/* in */ IBMDSwitcherInputCallback* callback) = 0;
    virtual HRESULT RemoveCallback (/* in */ IBMDSwitcherInputCallback* callback) = 0;
	
protected:
	virtual ~IBMDSwitcherInput_v6_8 () {} // call Release method to drop reference count
};

/* Interface IBMDSwitcherInputIterator_v6_8 - Input Iterator */

class IBMDSwitcherInputIterator_v6_8 : public IUnknown
{
public:
	virtual HRESULT Next (/* out */ IBMDSwitcherInput_v6_8** input) = 0;
	virtual HRESULT GetById (/* in */ BMDSwitcherInputId inputId, /* out */ IBMDSwitcherInput_v6_8** input) = 0;
	
protected:
	virtual ~IBMDSwitcherInputIterator_v6_8 () {} // call Release method to drop reference count
};

#endif      // defined(__cplusplus)
#endif /* defined(BMD_BMDSWITCHERAPI_V6_8_H) */
