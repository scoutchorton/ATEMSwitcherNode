/* -LICENSE-START-
** Copyright (c) 2015 Blackmagic Design
**
** Permission is hereby granted, free of charge, to any person or organization
** obtaining a copy of the software and accompanying documentation covered by
** this license (the "Software") to use, reproduce, display, distribute,
** execute, and transmit the Software, and to prepare derivative works of the
** Software, and to permit third-parties to whom the Software is furnished to
** do so, all subject to the following:
**
** The copyright notices in the Software and this entire statement, including
** the above license grant, this restriction and the following disclaimer,
** must be included in all copies of the Software, in whole or in part, and
** all derivative works of the Software, unless such copies or derivative
** works are solely in the form of machine-executable object code generated by
** a source language processor.
**
** THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
** IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
** FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
** SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
** FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
** ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
** DEALINGS IN THE SOFTWARE.
** -LICENSE-END-
*/

#ifndef BMD_BMDSWITCHERAPI_V6_4_1_H
#define BMD_BMDSWITCHERAPI_V6_4_1_H

#include "BMDSwitcherAPI.h"

// Interface ID Declarations
BMD_CONST REFIID IID_IBMDSwitcherCallback_v6_4_1	= /* 6122F290-8003-4CDB-9493-54BD3FBCD3A1 */ {0x61,0x22,0xF2,0x90,0x80,0x03,0x4C,0xDB,0x94,0x93,0x54,0xBD,0x3F,0xBC,0xD3,0xA1};
BMD_CONST REFIID IID_IBMDSwitcher_v6_4_1			= /* 13772940-59AE-4F4A-A4E4-0BD12F56C791 */ {0x13,0x77,0x29,0x40,0x59,0xAE,0x4F,0x4A,0xA4,0xE4,0x0B,0xD1,0x2F,0x56,0xC7,0x91};
BMD_CONST REFIID IID_IBMDSwitcherDiscovery_v6_4_1	= /* 0283B116-8CE0-4F86-A1FD-D25EAD2F1A00 */ {0x02,0x83,0xB1,0x16,0x8C,0xE0,0x4F,0x86,0xA1,0xFD,0xD2,0x5E,0xAD,0x2F,0x1A,0x00};

/* Enum BMDSwitcherEventType_v6_4_1 - IBMDSwitcher_v6_4_1 event type */

typedef uint32_t BMDSwitcherEventType_v6_4_1;
enum _BMDSwitcherEventType_v6_4_1 {
    bmdSwitcherEventTypeVideoModeChanged_v6_4_1                   = 'sevd',
    bmdSwitcherEventTypeDownConverterModeChanged_v6_4_1           = 'sedc',
    bmdSwitcherEventTypePowerStatusChanged_v6_4_1                 = 'sepw',
    bmdSwitcherEventTypeDisconnected_v6_4_1                       = 'sedi'
};

/* Enum BMDSwitcherDownConverterMode_v6_4_1 - Down convert mode used when converting 16:9 -> 4:3 */

typedef uint32_t BMDSwitcherDownConverterMode_v6_4_1;
enum _BMDSwitcherDownConverterMode_v6_4_1 {
    bmdSwitcherDownConverterModeCentreCut_v6_4_1                  = 'dccc',
    bmdSwitcherDownConverterModeLetterbox_v6_4_1                  = 'dclb',
    bmdSwitcherDownConverterModeAnamorphic_v6_4_1                 = 'dcam'
};

#if defined(__cplusplus)

// Forward Declarations

class IBMDSwitcherCallback_v6_4_1;
class IBMDSwitcher_v6_4_1;
class IBMDSwitcherDiscovery_v6_4_1;

/* Interface IBMDSwitcherCallback_v6_4_1 - Switcher Callback Delegate */

class IBMDSwitcherCallback_v6_4_1 : public IUnknown
{
public:
    virtual HRESULT Notify (/* in */ BMDSwitcherEventType_v6_4_1 eventType) = 0;
	
protected:
    virtual ~IBMDSwitcherCallback_v6_4_1 () {} // call Release method to drop reference count
};

/* Interface IBMDSwitcher_v6_4_1 - Switcher Object */

class IBMDSwitcher_v6_4_1 : public IUnknown
{
public:
    virtual HRESULT GetProductName (/* out */ CFStringRef* productName) = 0;
    virtual HRESULT GetVideoMode (/* out */ BMDSwitcherVideoMode* videoMode) = 0;
    virtual HRESULT SetVideoMode (/* in */ BMDSwitcherVideoMode videoMode) = 0;
    virtual HRESULT GetDownConverterMode (/* out */ BMDSwitcherDownConverterMode_v6_4_1* downConverterMode) = 0;
    virtual HRESULT SetDownConverterMode (/* in */ BMDSwitcherDownConverterMode_v6_4_1 downConverterMode) = 0;
    virtual HRESULT GetPowerStatus (/* out */ BMDSwitcherPowerStatus* powerStatus) = 0;
    virtual HRESULT DoesSupportVideoMode (/* in */ BMDSwitcherVideoMode videoMode, /* out */ bool* supported) = 0;
    virtual HRESULT CreateIterator (/* in */ REFIID iid, /* out */ LPVOID* ppv) = 0;
    virtual HRESULT AddCallback (/* in */ IBMDSwitcherCallback_v6_4_1* callback) = 0;
    virtual HRESULT RemoveCallback (/* in */ IBMDSwitcherCallback_v6_4_1* callback) = 0;

protected:
    virtual ~IBMDSwitcher_v6_4_1 () {} // call Release method to drop reference count
};

/* Interface IBMDSwitcherDiscovery_v6_4_1 - Used to discover and connect to switchers */

class IBMDSwitcherDiscovery_v6_4_1 : public IUnknown
{
public:
    virtual HRESULT ConnectTo (/* in */ CFStringRef deviceAddress, /* out */ IBMDSwitcher_v6_4_1** switcherDevice, /* out */ BMDSwitcherConnectToFailure* failReason) = 0;

protected:
    virtual ~IBMDSwitcherDiscovery_v6_4_1 () {} // call Release method to drop reference count
};

/* Functions */

extern "C" {

    IBMDSwitcherDiscovery_v6_4_1* CreateBMDSwitcherDiscoveryInstance_v6_4_1 (void);

}

#endif      // defined(__cplusplus)
#endif /* BMD_BMDSWITCHERAPI_V6_4_1_H */
