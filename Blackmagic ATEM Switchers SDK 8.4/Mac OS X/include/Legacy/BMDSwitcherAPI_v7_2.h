/* -LICENSE-START-
** Copyright (c) 2017 Blackmagic Design
**
** Permission is hereby granted, free of charge, to any person or organization
** obtaining a copy of the software and accompanying documentation covered by
** this license (the "Software") to use, reproduce, display, distribute,
** execute, and transmit the Software, and to prepare derivative works of the
** Software, and to permit third-parties to whom the Software is furnished to
** do so, all subject to the following:
** 
** The copyright notices in the Software and this entire statement, including
** the above license grant, this restriction and the following disclaimer,
** must be included in all copies of the Software, in whole or in part, and
** all derivative works of the Software, unless such copies or derivative
** works are solely in the form of machine-executable object code generated by
** a source language processor.
** 
** THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
** IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
** FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
** SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
** FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
** ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
** DEALINGS IN THE SOFTWARE.
** -LICENSE-END-
*/

#ifndef BMD_BMDSWITCHERAPI_V7_2_H
#define BMD_BMDSWITCHERAPI_V7_2_H

#include "BMDSwitcherAPI.h"

// Interface ID Declarations

BMD_CONST REFIID IID_IBMDSwitcherKey_v7_2                      = /* A41B54B5-0D52-44D5-ACE5-9B94B0AF2A0B */ {0xA4,0x1B,0x54,0xB5,0x0D,0x52,0x44,0xD5,0xAC,0xE5,0x9B,0x94,0xB0,0xAF,0x2A,0x0B};
BMD_CONST REFIID IID_IBMDSwitcherKeyIterator_v7_2              = /* ECC57473-0993-444F-B3CF-ED593CA25B09 */ {0xEC,0xC5,0x74,0x73,0x09,0x93,0x44,0x4F,0xB3,0xCF,0xED,0x59,0x3C,0xA2,0x5B,0x09};

#if defined(__cplusplus)

// Forward Declarations

class IBMDSwitcherKey_v7_2;

/* Interface IBMDSwitcherKey_v7_2 - Key Object */

class IBMDSwitcherKey_v7_2 : public IUnknown
{
public:
    virtual HRESULT GetType (/* out */ BMDSwitcherKeyType* type) = 0;
    virtual HRESULT SetType (/* in */ BMDSwitcherKeyType type) = 0;
    virtual HRESULT GetInputCut (/* out */ BMDSwitcherInputId* input) = 0;
    virtual HRESULT SetInputCut (/* in */ BMDSwitcherInputId input) = 0;
    virtual HRESULT GetInputFill (/* out */ BMDSwitcherInputId* input) = 0;
    virtual HRESULT SetInputFill (/* in */ BMDSwitcherInputId input) = 0;
    virtual HRESULT GetCutInputAvailabilityMask (/* out */ BMDSwitcherInputAvailability* availabilityMask) = 0;
    virtual HRESULT GetFillInputAvailabilityMask (/* out */ BMDSwitcherInputAvailability* availabilityMask) = 0;
    virtual HRESULT GetOnAir (/* out */ bool* onAir) = 0;
    virtual HRESULT SetOnAir (/* in */ bool onAir) = 0;
    virtual HRESULT CanBeDVEKey (/* out */ bool* canDVE) = 0;
    virtual HRESULT GetMasked (/* out */ bool* maskEnabled) = 0;
    virtual HRESULT SetMasked (/* in */ bool maskEnabled) = 0;
    virtual HRESULT GetMaskTop (/* out */ double* top) = 0;
    virtual HRESULT SetMaskTop (/* in */ double top) = 0;
    virtual HRESULT GetMaskBottom (/* out */ double* bottom) = 0;
    virtual HRESULT SetMaskBottom (/* in */ double bottom) = 0;
    virtual HRESULT GetMaskLeft (/* out */ double* left) = 0;
    virtual HRESULT SetMaskLeft (/* in */ double left) = 0;
    virtual HRESULT GetMaskRight (/* out */ double* right) = 0;
    virtual HRESULT SetMaskRight (/* in */ double right) = 0;
    virtual HRESULT ResetMask (void) = 0;
    virtual HRESULT GetTransitionSelectionMask (/* out */ BMDSwitcherTransitionSelection* selectionMask) = 0;
    virtual HRESULT AddCallback (/* in */ IBMDSwitcherKeyCallback* callback) = 0;
    virtual HRESULT RemoveCallback (/* in */ IBMDSwitcherKeyCallback* callback) = 0;

protected:
	virtual ~IBMDSwitcherKey_v7_2 () {} // call Release method to drop reference count
};

/* Interface IBMDSwitcherKeyIterator_v7_2 - Key Iterator */

class IBMDSwitcherKeyIterator_v7_2 : public IUnknown
{
public:
	virtual HRESULT Next (/* out */ IBMDSwitcherKey_v7_2** key) = 0;

protected:
	virtual ~IBMDSwitcherKeyIterator_v7_2 () {} // call Release method to drop reference count
};

#endif      // defined(__cplusplus)
#endif /* defined(BMD_BMDSWITCHERAPI_V7_2_H) */
