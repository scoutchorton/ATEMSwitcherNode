/* -LICENSE-START-
** Copyright (c) 2012 Blackmagic Design
**
** Permission is hereby granted, free of charge, to any person or organization
** obtaining a copy of the software and accompanying documentation covered by
** this license (the "Software") to use, reproduce, display, distribute,
** execute, and transmit the Software, and to prepare derivative works of the
** Software, and to permit third-parties to whom the Software is furnished to
** do so, all subject to the following:
** 
** The copyright notices in the Software and this entire statement, including
** the above license grant, this restriction and the following disclaimer,
** must be included in all copies of the Software, in whole or in part, and
** all derivative works of the Software, unless such copies or derivative
** works are solely in the form of machine-executable object code generated by
** a source language processor.
** 
** THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
** IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
** FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
** SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
** FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
** ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
** DEALINGS IN THE SOFTWARE.
** -LICENSE-END-
*/

#pragma once

#import <Cocoa/Cocoa.h>
#include "BMDSwitcherAPI.h"
#include <vector>

class StillTransfer;
class ClipTransfer;
class SwitcherMonitor;
class MediaPlayerMonitor;
class StillsMonitor;
class ClipMonitor;

@interface SwitcherMediaPoolAppDelegate : NSObject <NSApplicationDelegate>
{
	NSWindow* window;
	
	IBOutlet NSTextField*			mAddressText;
	IBOutlet NSButton*				mConnectButton;
	IBOutlet NSTextField*			mNameText;
	IBOutlet NSPopUpButton*			mMediaPlayerSourcePopup;
	IBOutlet NSButton*				mMediaPlayerBeginButton;
	IBOutlet NSButton*				mMediaPlayerPreviousButton;
	IBOutlet NSButton*				mMediaPlayerPlayButton;
	IBOutlet NSButton*				mMediaPlayerNextButton;
	IBOutlet NSButton*				mMediaPlayerLoopButton;
	IBOutlet NSPopUpButton*			mMediaPoolTargetPopup;
	IBOutlet NSButton*				mMediaPoolUploadButton;
	IBOutlet NSProgressIndicator*	mMediaPoolProgressIndicator;
	
	IBMDSwitcherDiscovery*					mSwitcherDiscovery;
	
	// these are set on connection
	IBMDSwitcher*							mSwitcher;
	std::vector<IBMDSwitcherMediaPlayer*>	mMediaPlayers;
	IBMDSwitcherMediaPool*					mMediaPool;
	IBMDSwitcherStills*						mStills;
	std::vector<IBMDSwitcherClip*>			mClips;
	StillTransfer*							mStillTransfer;
	std::vector<ClipTransfer*>				mClipTransfers;
	
	SwitcherMonitor*						mSwitcherMonitor;
	MediaPlayerMonitor*						mMediaPlayer1Monitor;
	StillsMonitor*							mStillsMonitor;
	std::vector<ClipMonitor*>				mClipMonitors;
}

@property (assign) IBOutlet NSWindow *window;

// UI callbacks
- (IBAction)connectButtonClicked:(id)sender;
- (IBAction)mediaPlayerSourcePopupChanged:(id)sender;
- (IBAction)beginButtonClicked:(id)sender;
- (IBAction)previousButtonClicked:(id)sender;
- (IBAction)playButtonClicked:(id)sender;
- (IBAction)nextButtonClicked:(id)sender;
- (IBAction)loopButtonClicked:(id)sender;
- (IBAction)mediaPoolTargetPopupChanged:(id)sender;
- (IBAction)uploadButtonClicked:(id)sender;

// Monitor callbacks
- (void)onSwitcherDisconnected;
- (void)onMediaPlayerSourceChanged;
- (void)onMediaPlayerPlayingChanged;
- (void)onMediaPlayerBeginChanged;
- (void)onMediaPlayerLoopChanged;
- (void)onStillClipNameValidChanged;
- (void)onStillsLockObtained;
- (void)onClipLockObtained:(NSNumber *)clipIndex;
- (void)onStillsTransferEnded:(NSNumber *)enabled;
- (void)onClipTransferEnded:(NSArray *)args;

// Helper methods
- (void)cleanUpConnection;
- (void)switcherConnected;
- (void)switcherDisconnected;
- (void)updateMediaPopupItems:(NSPopUpButton*)comboBox;
- (void)updateMediaPlayerPopupSelection;
- (void)enableMediaPlayerButtons:(bool)enabled;
- (void)updateMediaPoolPopupSelection;
- (void)enableMediaPoolWidgets:(bool)enabled;

@end
