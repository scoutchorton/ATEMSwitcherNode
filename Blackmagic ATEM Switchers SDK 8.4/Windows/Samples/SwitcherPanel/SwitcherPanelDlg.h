/* -LICENSE-START-
** Copyright (c) 2011 Blackmagic Design
**
** Permission is hereby granted, free of charge, to any person or organization
** obtaining a copy of the software and accompanying documentation covered by
** this license (the "Software") to use, reproduce, display, distribute,
** execute, and transmit the Software, and to prepare derivative works of the
** Software, and to permit third-parties to whom the Software is furnished to
** do so, all subject to the following:
** 
** The copyright notices in the Software and this entire statement, including
** the above license grant, this restriction and the following disclaimer,
** must be included in all copies of the Software, in whole or in part, and
** all derivative works of the Software, unless such copies or derivative
** works are solely in the form of machine-executable object code generated by
** a source language processor.
** 
** THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
** IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
** FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
** SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
** FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
** ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
** DEALINGS IN THE SOFTWARE.
** -LICENSE-END-
*/

#pragma once

#include "BMDSwitcherAPI_h.h"
#include <list>

class MixEffectBlockMonitor;
class SwitcherMonitor;
class InputMonitor;

// CSwitcherPanelDlg dialog
class CSwitcherPanelDlg : public CDialog
{
	// Construction
public:
	CSwitcherPanelDlg(CWnd* pParent = NULL);	// standard constructor

	// Dialog Data
	enum { IDD = IDD_SWITCHERPANEL_DIALOG };

protected:
	virtual void DoDataExchange(CDataExchange* pDX);	// DDX/DDV support

	// Implementation
protected:
	HICON m_hIcon;
	virtual BOOL OnInitDialog();
	afx_msg void OnClose();
	afx_msg void OnVScroll(UINT nSBCode, UINT nPos, CScrollBar* pScrollBar);
	DECLARE_MESSAGE_MAP()

public:
	afx_msg void OnBnClickedConnect();
	afx_msg void OnBnClickedAuto();
	afx_msg void OnBnClickedCut();
	afx_msg void OnBnClickedFTB();
	afx_msg void OnProgramInputChanged();
	afx_msg void OnPreviewInputChanged();

private:
	void switcherConnected();
	void switcherDisconnected();
	void updatePopupButtonItems();
	void updateProgramButtonSelection();
	void updatePreviewButtonSelection();
	void updateSliderPosition();
	void updateTransitionFramesText();
	void updateFTBFramesText();
	LRESULT OnMixEffectBlockProgramInputChanged(WPARAM wParam, LPARAM lParam);
	LRESULT OnMixEffectBlockPreviewInputChanged(WPARAM wParam, LPARAM lParam);
	LRESULT OnMixEffectBlockInTransitionChanged(WPARAM wParam, LPARAM lParam);
	LRESULT OnMixEffectBlockTransitionPositionChanged(WPARAM wParam, LPARAM lParam);
	LRESULT OnMixEffectBlockTransitionFramesRemainingChanged(WPARAM wParam, LPARAM lParam);
	LRESULT OnMixEffectBlockFTBFramesRemainingChanged(WPARAM wParam, LPARAM lParam);
	LRESULT OnSwitcherInputLongnameChanged(WPARAM wParam, LPARAM lParam);
	LRESULT OnSwitcherDisconnected(WPARAM wParam, LPARAM lParam);
	void mixEffectBlockBoxSetEnabled(BOOL enabled);

	CEdit						mEditAddress;
	CButton						mButtonConnect;
	CEdit						mEditName;
	CComboBox					mComboProgram;
	CComboBox					mComboPreview;
	CSliderCtrl					mSlider;
	CButton						mButtonAuto;
	CButton						mButtonCut;
	CButton						mButtonFTB;
	CEdit						mEditTransitionFrames;
	CEdit						mEditFTBFrames;

	IBMDSwitcherDiscovery*		mSwitcherDiscovery;
	IBMDSwitcher*				mSwitcher;
	IBMDSwitcherMixEffectBlock*	mMixEffectBlock;
	MixEffectBlockMonitor*		mMixEffectBlockMonitor;
	SwitcherMonitor*			mSwitcherMonitor;
	std::list<InputMonitor*>	mInputMonitors;
	BOOL						mMoveSliderDownwards;
	BOOL						mCurrentTransitionReachedHalfway;
};
